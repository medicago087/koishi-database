{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { Context, defineProperty, difference, Schema, union } from 'koishi'\nimport { Dialogue, equal } from 'koishi-plugin-dialogue'\n\ndeclare module 'koishi-plugin-dialogue' {\n  interface DialogueTest {\n    guilds?: string[]\n    reversed?: boolean\n    partial?: boolean\n  }\n\n  interface Dialogue {\n    guilds: string[]\n  }\n\n  namespace Dialogue {\n    interface Options {\n      partial?: boolean\n      reversed?: boolean\n      _guilds?: string[]\n    }\n  }\n}\n\nexport const RE_GROUPS = /^\\d+(,\\d+)*$/\n\nexport interface Config {\n  authority?: number\n}\n\nexport const Config: Schema<Config> = Schema.object({\n  authority: Schema.number().default(3).description('修改上下文设置的权限等级。'),\n})\n\nexport const name = 'koishi-plugin-dialogue-context'\n\nexport const using = ['dialogue'] as const\n\nexport function apply(ctx: Context, config: Config) {\n  const { authority } = config\n\n  ctx.i18n.define('zh', require('./locales/zh'))\n\n  ctx.model.extend('dialogue', {\n    guilds: 'list(255)',\n  })\n\n  ctx.command('teach')\n    .option('disable', '-d')\n    .option('disableGlobal', '-D', { authority })\n    .option('enable', '-e')\n    .option('enableGlobal', '-E', { authority })\n    .option('guilds', '-g <gids:string>', { authority, type: RE_GROUPS })\n    .option('global', '-G')\n    .before(({ options, session }) => {\n      if (options.disable && options.enable) {\n        return session.text('.options-conflict', ['-d, -e'])\n      } else if (options.disableGlobal && options.enableGlobal) {\n        return session.text('.options-conflict', ['-D, -E'])\n      } else if (options.disableGlobal && options.disable) {\n        return session.text('.options-conflict', ['-D, -d'])\n      } else if (options.enable && options.enableGlobal) {\n        return session.text('.options-conflict', ['-E, -e'])\n      }\n\n      let noContextOptions = false\n      let reversed: boolean, partial: boolean, guilds: string[]\n      if (options.disable) {\n        reversed = true\n        partial = !options.enableGlobal\n        guilds = [session.gid]\n      } else if (options.disableGlobal) {\n        reversed = !!options.guilds\n        partial = false\n        guilds = options.enable ? [session.gid] : []\n      } else if (options.enableGlobal) {\n        reversed = !options.guilds\n        partial = false\n        guilds = []\n      } else {\n        noContextOptions = !options.enable\n        if (options['target'] ? options.enable : !options.global) {\n          reversed = false\n          partial = true\n          guilds = [session.gid]\n        }\n      }\n\n      defineProperty(options, 'reversed', reversed)\n      defineProperty(options, 'partial', partial)\n      if ('guilds' in options) {\n        if (noContextOptions) {\n          return session.text('.context.modifier-expected')\n        } else {\n          defineProperty(options, '_guilds', options.guilds ? options.guilds.split(',').map(id => `${session.platform}:${id}`) : [])\n        }\n      } else if (session.subtype !== 'group' && options['partial']) {\n        return session.text('.context.private-context')\n      } else {\n        defineProperty(options, '_guilds', guilds)\n      }\n    })\n\n  /* eslint-disable no-irregular-whitespace */\n  ctx.on('dialogue/usage', (output, session) => {\n    output.add(`\\\n上下文选项：\n　允许本群：　　　-e\n　禁止本群：　　　-d`, 700)\n    if (session.user.authority < authority) return\n    output.add(`\\\n　全局允许：　　　-E\n　全局禁止：　　　-D\n　设置群号：　　　-g id\n　无视上下文搜索：-G`, 700)\n  })\n  /* eslint-enable no-irregular-whitespace */\n\n  ctx.on('dialogue/modify', (session, data) => {\n    const { _guilds, partial, reversed } = session.argv.options\n    if (!_guilds) return\n    if (!data.guilds) data.guilds = []\n    if (partial) {\n      const newGroups = !(data.flag & Dialogue.Flag.complement) === reversed\n        ? difference(data.guilds, _guilds)\n        : union(data.guilds, _guilds)\n      if (!equal(data.guilds, newGroups)) {\n        data.guilds = newGroups.sort()\n      }\n    } else {\n      data.flag = data.flag & ~Dialogue.Flag.complement | (+reversed * Dialogue.Flag.complement)\n      if (!equal(data.guilds, _guilds)) {\n        data.guilds = _guilds.sort()\n      }\n    }\n  })\n\n  ctx.before('dialogue/search', (session, test) => {\n    const { options } = session.argv\n    test.partial = options.partial\n    test.reversed = options.reversed\n    test.guilds = options._guilds\n  })\n\n  ctx.on('dialogue/detail', ({ guilds, flag }, detail, session) => {\n    const includeCurrentGuild = session.subtype === 'group' && guilds.includes(session.gid)\n    const prefix = flag & Dialogue.Flag.complement ? 'enable-' : 'disable-'\n    const path = includeCurrentGuild\n      ? 'except-current-' + (guilds.length - 1 ? 'and-more' : 'only')\n      : guilds.length ? 'except-some' : 'all'\n    detail.add(session.text('.context.' + prefix + path, [guilds.length]), 500)\n  })\n\n  ctx.on('dialogue/abstract', ({ guilds, flag }, output, session) => {\n    const { options } = session.argv\n    if (!options._guilds && session.subtype === 'group') {\n      const isReversed = flag & Dialogue.Flag.complement\n      const hasGroup = guilds.includes(session.gid)\n      output.unshift(!isReversed === hasGroup ? isReversed ? 'E' : 'e' : isReversed ? 'd' : 'D')\n    }\n  })\n\n  ctx.on('dialogue/receive', ({ session, test }) => {\n    test.partial = true\n    test.reversed = false\n    test.guilds = [session.gid]\n  })\n\n  ctx.on('dialogue/query', (test, query) => {\n    if (!test.guilds || !test.guilds.length) return\n    query.$and.push({\n      $or: [{\n        flag: { [test.reversed ? '$bitsAllSet' : '$bitsAllClear']: Dialogue.Flag.complement },\n        $and: test.guilds.map($el => ({ guilds: { $el } })),\n      }, {\n        flag: { [test.reversed ? '$bitsAllClear' : '$bitsAllSet']: Dialogue.Flag.complement },\n        $not: { guilds: { $el: test.guilds } },\n      }],\n    })\n  })\n}\n"],
  "mappings": "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",
  "names": []
}
