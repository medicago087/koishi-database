"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InjectLogger = exports.MixinModel = exports.UseModel = exports.DefinePlugin = void 0;
const registrar_1 = require("../registrar");
const minato_decorators_1 = require("minato-decorators");
__exportStar(require("satori-decorators/dist/src/decorators/plugin"), exports);
exports.DefinePlugin = registrar_1.koishiRegistrar.pluginDecorators().DefinePlugin;
exports.UseModel = registrar_1.koishiRegistrar.decorateTopLevelAction((ctx, obj, ...models) => {
    const registrar = new minato_decorators_1.ModelRegistrar(ctx.model);
    models.forEach((m) => registrar.registerModel(m));
});
const MixinModel = (tableName, classDict) => registrar_1.koishiRegistrar.decorateTopLevelAction((ctx, obj) => {
    const registrar = new minato_decorators_1.ModelRegistrar(ctx.model);
    registrar.mixinModel(tableName, classDict);
})();
exports.MixinModel = MixinModel;
const InjectLogger = (name) => registrar_1.koishiRegistrar
    .pluginDecorators()
    .InjectSystem((obj) => obj.__ctx.logger(name || obj.constructor.name));
exports.InjectLogger = InjectLogger;
//# sourceMappingURL=plugin.js.map