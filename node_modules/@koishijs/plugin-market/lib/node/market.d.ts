import { Context, Dict, Schema } from 'koishi';
import { AnalyzedPackage } from '@koishijs/registry';
import { MarketProvider as BaseMarketProvider } from '../shared';
import { throttle } from 'throttle-debounce';
declare class MarketProvider extends BaseMarketProvider {
    config: MarketProvider.Config;
    static using: string[];
    private failed;
    private scanner;
    private fullCache;
    private tempCache;
    constructor(ctx: Context, config: MarketProvider.Config);
    start(): Promise<void>;
    stop(): void;
    flushData: throttle<() => void>;
    collect(): Promise<any>;
    get(): Promise<{
        data: {};
        failed: number;
        total: number;
        progress: number;
        gravatar?: undefined;
    } | {
        data: Dict<AnalyzedPackage, string>;
        failed: number;
        total: number;
        progress: number;
        gravatar: string;
    }>;
}
declare namespace MarketProvider {
    interface Config {
        endpoint?: string;
        timeout?: number;
    }
    const Config: Schema<Config>;
}
export default MarketProvider;
