import { Dict, EffectScope, Schema } from 'koishi';
import { Manifest, PackageJson } from '@koishijs/registry';
import { PackageProvider as BasePackageProvider } from '../shared';
declare class PackageProvider extends BasePackageProvider {
    cache: Dict<PackageProvider.Data>;
    task: Promise<void>;
    update(state: EffectScope): void;
    prepare(): Promise<void>;
    get(forced?: boolean): Promise<{
        [k: string]: PackageProvider.Data;
    }>;
    private loadDirectory;
    private loadPackage;
    private parsePackage;
    getManifest(name: string): Promise<Manifest>;
}
declare namespace PackageProvider {
    interface Config {
    }
    interface Data extends Partial<PackageJson> {
        id?: number;
        forkable?: boolean;
        shortname?: string;
        schema?: Schema;
        usage?: string;
        workspace?: boolean;
        manifest?: Manifest;
    }
}
export default PackageProvider;
