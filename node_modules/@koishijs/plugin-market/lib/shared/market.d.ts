import { Context, Dict } from 'koishi';
import { DataService } from '@koishijs/plugin-console';
import { AnalyzedPackage, MarketResult } from '@koishijs/registry';
declare module '@koishijs/plugin-console' {
    interface Events {
        'market/refresh'(): void;
    }
}
export declare abstract class MarketProvider extends DataService<MarketProvider.Payload> {
    private _task;
    protected _error: any;
    constructor(ctx: Context);
    start(): void;
    abstract collect(): Promise<any>;
    prepare(): Promise<MarketResult>;
}
export declare namespace MarketProvider {
    interface Payload {
        data: Dict<AnalyzedPackage>;
        total: number;
        failed: number;
        progress: number;
        gravatar?: string;
    }
}
