{
  "version": 3,
  "sources": ["../../src/browser/index.ts", "../../src/browser/installer.ts", "../../src/browser/market.ts", "../../src/browser/packages.ts"],
  "sourcesContent": ["import { Context, Schema } from 'koishi'\nimport Installer from './installer'\nimport MarketProvider from './market'\nimport PackageProvider from './packages'\nimport { ConfigWriter, ServiceProvider } from '../shared'\n\nexport * from './installer'\nexport * from './market'\nexport * from './packages'\nexport * from '../shared'\n\nexport {\n  Installer,\n  MarketProvider,\n  PackageProvider,\n}\n\nexport const name = 'manager'\nexport const using = ['console'] as const\n\nexport interface Config {}\n\nexport const Config: Schema<Config> = Schema.object({})\n\nexport function apply(ctx: Context, config: Config) {\n  ctx.plugin(Installer)\n  ctx.plugin(MarketProvider)\n  ctx.plugin(PackageProvider)\n  ctx.plugin(ConfigWriter)\n  ctx.plugin(ServiceProvider)\n\n  ctx.console.addEntry(process.env.KOISHI_BASE ? [\n    process.env.KOISHI_BASE + '/dist/index.js',\n    process.env.KOISHI_BASE + '/dist/style.css',\n  ] : [\n    // @ts-ignore\n    import.meta.url.replace(/\\/src\\/[^/]+\\/[^/]+$/, '/client/index.ts'),\n  ])\n}\n", "import { Context, Dict } from 'koishi'\nimport { DataService } from '@koishijs/plugin-console'\nimport { PackageJson } from '@koishijs/registry'\nimport {} from '@koishijs/loader'\n\ndeclare module '@koishijs/plugin-console' {\n  interface Events {\n    'market/install'(deps: Dict<string>): Promise<number>\n  }\n}\n\nexport interface Dependency {\n  /**\n   * requested semver range\n   * @example `^1.2.3` -> `1.2.3`\n   */\n  request: string\n  /**\n   * installed package version\n   * @example `1.2.5`\n   */\n  resolved?: string\n  /** whether it is a workspace package */\n  workspace?: boolean\n  /** all available versions */\n  versions?: Dict<Partial<PackageJson>>\n  /** latest version */\n  latest?: string\n}\n\nclass Installer extends DataService<Dict<Dependency>> {\n  static using = ['console.market']\n\n  constructor(public ctx: Context) {\n    super(ctx, 'dependencies', { authority: 4 })\n  }\n\n  async get(force = false) {\n    const market = await this.ctx.console.market.prepare()\n    const objects = [...market.objects.filter(o => o.portable), ...market.shared]\n    return Object.fromEntries(objects.map((object) => [object.name, {\n      request: object.version,\n      resolved: object.version,\n      versions: object.versions,\n      latest: object.version,\n    }]))\n  }\n}\n\nexport default Installer\n", "import { MarketProvider as BaseMarketProvider } from '../shared'\n\nexport default class MarketProvider extends BaseMarketProvider {\n  start() {\n    super.start()\n    this.refresh()\n  }\n\n  async collect() {\n    const response = await fetch('https://registry.koishi.chat/market.json')\n    return await response.json()\n  }\n\n  async get() {\n    const market = await this.prepare()\n    if (!market) return { data: {}, failed: 0, total: 0, progress: 0 }\n    return {\n      data: Object.fromEntries(market.objects.map(item => [item.name, item])),\n      failed: 0,\n      total: market.objects.length,\n      progress: market.objects.length,\n    }\n  }\n}\n", "import { Context, pick } from 'koishi'\nimport { PackageProvider as BasePackageProvider } from '../shared'\n\nexport default class PackageProvider extends BasePackageProvider {\n  static using = ['console.market']\n\n  async getManifest(name: string) {\n    const market = await this.ctx.console.market.prepare()\n    return market.objects.find(item => {\n      return name === item.name.replace(/(koishi-|^@koishijs\\/)plugin-/, '')\n    })?.manifest\n  }\n\n  async get(forced = false) {\n    const market = await this.ctx.console.market.prepare()\n\n    const packages = await Promise.all(market.objects.map(async (data) => {\n      const result = pick(data, [\n        'name',\n        'version',\n        'description',\n        'portable',\n        'manifest',\n      ]) as BasePackageProvider.Data\n      result.shortname = data.name.replace(/(koishi-|^@koishijs\\/)plugin-/, '')\n      result.manifest = data.manifest\n      result.peerDependencies = { ...data.versions[data.version].peerDependencies }\n      if (!result.portable) return\n      const exports = await this.ctx.loader.resolvePlugin(data.shortname)\n      result.schema = exports?.Config || exports?.schema\n      const runtime = this.ctx.registry.get(exports)\n      if (runtime) this.parseRuntime(runtime, result)\n      return result\n    }))\n\n    // add app config\n    packages.unshift({\n      name: '',\n      shortname: '',\n      schema: Context.Config,\n    })\n\n    return Object.fromEntries(packages.filter(x => x).map(data => [data.name, data]))\n  }\n}\n"],
  "mappings": ";;;;;;;;;AAAA,SAAkB,cAAc;;;ACChC,SAAS,mBAAmB;AA6B5B,IAAM,YAAN,cAAwB,YAA8B;AAAA,EAGpD,YAAmB,KAAc;AAC/B,UAAM,KAAK,gBAAgB,EAAE,WAAW,EAAE,CAAC;AAD1B;AAAA,EAEnB;AAAA,EAEA,MAAM,IAAI,QAAQ,OAAO;AACvB,UAAM,SAAS,MAAM,KAAK,IAAI,QAAQ,OAAO,QAAQ;AACrD,UAAM,UAAU,CAAC,GAAG,OAAO,QAAQ,OAAO,OAAK,EAAE,QAAQ,GAAG,GAAG,OAAO,MAAM;AAC5E,WAAO,OAAO,YAAY,QAAQ,IAAI,CAAC,WAAW,CAAC,OAAO,MAAM;AAAA,MAC9D,SAAS,OAAO;AAAA,MAChB,UAAU,OAAO;AAAA,MACjB,UAAU,OAAO;AAAA,MACjB,QAAQ,OAAO;AAAA,IACjB,CAAC,CAAC,CAAC;AAAA,EACL;AACF;AAjBM;AACJ,cADI,WACG,SAAQ,CAAC,gBAAgB;AAkBlC,IAAO,oBAAQ;;;ACjDf,SAAS,kBAAkB,0BAA0B;AAErD,IAAqB,iBAArB,cAA4C,mBAAmB;AAAA,EAC7D,QAAQ;AACN,UAAM,MAAM;AACZ,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,MAAM,UAAU;AACd,UAAM,WAAW,MAAM,MAAM,0CAA0C;AACvE,WAAO,MAAM,SAAS,KAAK;AAAA,EAC7B;AAAA,EAEA,MAAM,MAAM;AACV,UAAM,SAAS,MAAM,KAAK,QAAQ;AAClC,QAAI,CAAC;AAAQ,aAAO,EAAE,MAAM,CAAC,GAAG,QAAQ,GAAG,OAAO,GAAG,UAAU,EAAE;AACjE,WAAO;AAAA,MACL,MAAM,OAAO,YAAY,OAAO,QAAQ,IAAI,UAAQ,CAAC,KAAK,MAAM,IAAI,CAAC,CAAC;AAAA,MACtE,QAAQ;AAAA,MACR,OAAO,OAAO,QAAQ;AAAA,MACtB,UAAU,OAAO,QAAQ;AAAA,IAC3B;AAAA,EACF;AACF;AArBqB;;;ACFrB,SAAS,SAAS,YAAY;AAC9B,SAAS,mBAAmB,2BAA2B;AAEvD,IAAqB,kBAArB,cAA6C,oBAAoB;AAAA,EAG/D,MAAM,YAAYA,OAAc;AAC9B,UAAM,SAAS,MAAM,KAAK,IAAI,QAAQ,OAAO,QAAQ;AACrD,WAAO,OAAO,QAAQ,KAAK,UAAQ;AACjC,aAAOA,UAAS,KAAK,KAAK,QAAQ,iCAAiC,EAAE;AAAA,IACvE,CAAC,GAAG;AAAA,EACN;AAAA,EAEA,MAAM,IAAI,SAAS,OAAO;AACxB,UAAM,SAAS,MAAM,KAAK,IAAI,QAAQ,OAAO,QAAQ;AAErD,UAAM,WAAW,MAAM,QAAQ,IAAI,OAAO,QAAQ,IAAI,OAAO,SAAS;AACpE,YAAM,SAAS,KAAK,MAAM;AAAA,QACxB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AACD,aAAO,YAAY,KAAK,KAAK,QAAQ,iCAAiC,EAAE;AACxE,aAAO,WAAW,KAAK;AACvB,aAAO,mBAAmB,EAAE,GAAG,KAAK,SAAS,KAAK,SAAS,iBAAiB;AAC5E,UAAI,CAAC,OAAO;AAAU;AACtB,YAAM,UAAU,MAAM,KAAK,IAAI,OAAO,cAAc,KAAK,SAAS;AAClE,aAAO,SAAS,SAAS,UAAU,SAAS;AAC5C,YAAM,UAAU,KAAK,IAAI,SAAS,IAAI,OAAO;AAC7C,UAAI;AAAS,aAAK,aAAa,SAAS,MAAM;AAC9C,aAAO;AAAA,IACT,CAAC,CAAC;AAGF,aAAS,QAAQ;AAAA,MACf,MAAM;AAAA,MACN,WAAW;AAAA,MACX,QAAQ,QAAQ;AAAA,IAClB,CAAC;AAED,WAAO,OAAO,YAAY,SAAS,OAAO,OAAK,CAAC,EAAE,IAAI,UAAQ,CAAC,KAAK,MAAM,IAAI,CAAC,CAAC;AAAA,EAClF;AACF;AAzCqB;AACnB,cADmB,iBACZ,SAAQ,CAAC,gBAAgB;;;AHAlC,SAAS,cAAc,uBAAuB;AAK9C,cAAc;AAQP,IAAM,OAAO;AACb,IAAM,QAAQ,CAAC,SAAS;AAIxB,IAAM,SAAyB,OAAO,OAAO,CAAC,CAAC;AAE/C,SAAS,MAAM,KAAc,QAAgB;AAClD,MAAI,OAAO,iBAAS;AACpB,MAAI,OAAO,cAAc;AACzB,MAAI,OAAO,eAAe;AAC1B,MAAI,OAAO,YAAY;AACvB,MAAI,OAAO,eAAe;AAE1B,MAAI,QAAQ,SAAS,QAAQ,IAAI,cAAc;AAAA,IAC7C,QAAQ,IAAI,cAAc;AAAA,IAC1B,QAAQ,IAAI,cAAc;AAAA,EAC5B,IAAI;AAAA,IAEF,YAAY,IAAI,QAAQ,wBAAwB,kBAAkB;AAAA,EACpE,CAAC;AACH;AAdgB;",
  "names": ["name"]
}
