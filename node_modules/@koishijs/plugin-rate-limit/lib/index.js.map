{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { Argv, Command, Context, Dict, Schema, Session, Time, User } from 'koishi'\nimport { adminUser } from '@koishijs/helpers'\nimport {} from '@koishijs/plugin-help'\nimport zh from './locales/zh.yml'\n\ndeclare module 'koishi' {\n  namespace Command {\n    interface Config {\n      /** usage identifier */\n      usageName?: string\n      /** max usage per day */\n      maxUsage?: Computed<number>\n      /** min interval */\n      minInterval?: Computed<number>\n      bypassAuthority?: Computed<number>\n    }\n  }\n\n  interface User {\n    usage: Dict<number>\n    timers: Dict<number>\n  }\n\n  namespace Argv {\n    interface OptionConfig {\n      notUsage?: boolean\n    }\n  }\n}\n\nexport interface Config {}\n\nexport const name = 'rate-limit'\nexport const using = ['database'] as const\nexport const Config: Schema<Config> = Schema.object({})\n\nexport function apply(ctx: Context) {\n  ctx.i18n.define('zh', zh)\n\n  ctx.model.extend('user', {\n    usage: 'json',\n    timers: 'json',\n  })\n\n  // add user fields\n  ctx.before('command/attach-user', ({ command, options = {} }, fields) => {\n    if (!command) return\n    const { maxUsage, minInterval, bypassAuthority } = command.config\n    let shouldFetchUsage = !!(maxUsage || minInterval)\n    for (const { name, notUsage } of Object.values(command._options)) {\n      // --help is not a usage (#772)\n      if (name === 'help') continue\n      if (name in options && notUsage) shouldFetchUsage = false\n    }\n    if (shouldFetchUsage) {\n      if (maxUsage) fields.add('usage')\n      if (minInterval) fields.add('timers')\n    }\n    if (bypassAuthority) fields.add('authority')\n  })\n\n  function bypassRateLimit(session: Session<'authority'>) {\n    if (!session.user) return true\n    const bypassAuthority = session.argv.command.getConfig('bypassAuthority', session)\n    if (session.user.authority >= bypassAuthority) return true\n  }\n\n  // check user\n  ctx.before('command/execute', (argv: Argv<'authority' | 'usage' | 'timers'>) => {\n    const { session, options, command } = argv\n    if (bypassRateLimit(session)) return\n\n    function sendHint(path: string, ...param: any[]) {\n      if (!command.config.showWarning) return ''\n      return session.text([`.${path}`, `internal.${path}`], param)\n    }\n\n    let isUsage = true\n    for (const { name, notUsage } of Object.values(command._options)) {\n      if (name in options && notUsage) isUsage = false\n    }\n\n    // check usage\n    if (isUsage) {\n      const name = getUsageName(command)\n      const minInterval = command.getConfig('minInterval', session)\n      const maxUsage = command.getConfig('maxUsage', session)\n\n      if (maxUsage < Infinity && checkUsage(name, session.user, maxUsage)) {\n        return sendHint('usage-exhausted')\n      }\n\n      if (minInterval > 0 && checkTimer(name, session.user, minInterval)) {\n        return sendHint('too-frequent')\n      }\n    }\n  })\n\n  // extend command help\n  ctx.on('help/command', (output, command, session: Session<'authority' | 'usage' | 'timers'>) => {\n    if (bypassRateLimit(session)) return\n\n    const name = getUsageName(command)\n    const maxUsage = command.getConfig('maxUsage', session) ?? Infinity\n    const minInterval = command.getConfig('minInterval', session) ?? 0\n\n    if (maxUsage < Infinity) {\n      const count = getUsage(name, session.user)\n      output.push(session.text('internal.command-max-usage', [Math.min(count, maxUsage), maxUsage]))\n    }\n\n    if (minInterval > 0) {\n      const due = session.user.timers[name]\n      const nextUsage = due ? (Math.max(0, due - Date.now()) / 1000).toFixed() : 0\n      output.push(session.text('internal.command-min-interval', [nextUsage, minInterval / 1000]))\n    }\n  })\n\n  // extend command option\n  ctx.on('help/option', (output, option, command, session: Session<'authority'>) => {\n    if (bypassRateLimit(session)) return output\n    const maxUsage = command.getConfig('maxUsage', session)\n    if (option.notUsage && maxUsage !== Infinity) {\n      output += session.text('internal.option-not-usage')\n    }\n    return output\n  })\n\n  ctx.command('usage [key] [value:posint]', { authority: 1 })\n    .userFields(['usage'])\n    .option('set', '-s', { authority: 4 })\n    .option('clear', '-c', { authority: 4 })\n    .use(adminUser)\n    .action(({ session, options }, name, count) => {\n      const { user } = session\n      if (options.clear) {\n        name ? delete user.usage[name] : user.usage = {}\n        return\n      }\n\n      if (options.set) {\n        if (!count) return session.text('internal.insufficient-arguments')\n        user.usage[name] = count\n        return\n      }\n\n      if (name) return session.text('.present', [name, user.usage[name] || 0])\n      const output: string[] = []\n      for (const name of Object.keys(user.usage).sort()) {\n        if (name.startsWith('_')) continue\n        output.push(`${name}ï¼š${user.usage[name]}`)\n      }\n      if (!output.length) return session.text('.none')\n      output.unshift(session.text('.list'))\n      return output.join('\\n')\n    })\n\n  ctx.command('timer [key] [value:date]', { authority: 1 })\n    .userFields(['timers'])\n    .option('set', '-s', { authority: 4 })\n    .option('clear', '-c', { authority: 4 })\n    .use(adminUser)\n    .action(({ session, options }, name, value) => {\n      const { user } = session\n      if (options.clear) {\n        name ? delete user.timers[name] : user.timers = {}\n        return\n      }\n\n      if (options.set) {\n        if (!value) return session.text('internal.insufficient-arguments')\n        user.timers[name] = +value\n        return\n      }\n\n      const now = Date.now()\n      if (name) {\n        const delta = user.timers[name] - now\n        if (delta > 0) return session.text('.present', [name, delta])\n        return session.text('.absent', [name])\n      }\n      const output: string[] = []\n      for (const name of Object.keys(user.timers).sort()) {\n        if (name.startsWith('_')) continue\n        output.push(session.text('.item', [name, user.timers[name] - now]))\n      }\n      if (!output.length) return session.text('.none')\n      output.unshift(session.text('.list'))\n      return output.join('\\n')\n    })\n}\n\nexport function getUsageName(command: Command) {\n  return command.config.usageName || command.name\n}\n\nexport function getUsage(name: string, user: Pick<User, 'usage'>) {\n  const _date = Time.getDateNumber()\n  if (user.usage._date !== _date) {\n    user.usage = { _date }\n  }\n  return user.usage[name] || 0\n}\n\nexport function checkUsage(name: string, user: Pick<User, 'usage'>, maxUsage?: number) {\n  if (!user.usage) return\n  const count = getUsage(name, user)\n  if (count >= maxUsage) return true\n  if (maxUsage) {\n    user.usage[name] = count + 1\n  }\n}\n\nexport function checkTimer(name: string, { timers }: Pick<User, 'timers'>, offset?: number) {\n  const now = Date.now()\n  if (!(now <= timers._date)) {\n    for (const key in timers) {\n      if (now > timers[key]) delete timers[key]\n    }\n    timers._date = now + Time.day\n  }\n  if (now <= timers[name]) return true\n  if (offset !== undefined) {\n    timers[name] = now + offset\n  }\n}\n"],
  "mappings": "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",
  "names": ["name"]
}
