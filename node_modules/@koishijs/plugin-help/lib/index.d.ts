import { Channel, Command, Context, Schema, Session, User } from 'koishi';
declare module 'koishi' {
    interface Events {
        'help/command'(output: string[], command: Command, session: Session): void;
        'help/option'(output: string, option: Argv.OptionVariant, command: Command, session: Session): string;
    }
    namespace Command {
        interface Config {
            /** hide all options by default */
            hideOptions?: boolean;
            /** hide command */
            hidden?: boolean;
        }
    }
    namespace Argv {
        interface OptionConfig {
            hidden?: boolean | ((session: Session) => boolean);
        }
    }
}
export interface Config {
    shortcut?: boolean;
    options?: boolean;
}
export declare const Config: Schema<Config>;
export declare function enableHelp<U extends User.Field, G extends Channel.Field, A extends any[], O extends {}>(cmd: Command<U, G, A, O>): Command<U, G, A, import("koishi").Extend<O, "help", string>>;
export declare const name = "help";
export declare function apply(ctx: Context, config: Config): void;
