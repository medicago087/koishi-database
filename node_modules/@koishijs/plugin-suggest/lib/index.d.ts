import { Awaitable, Context, Next, Schema, Session } from 'koishi';
declare module 'koishi' {
    interface Context {
        $suggest: SuggestionService;
    }
    interface Session {
        suggest(options: SuggestOptions): Promise<void>;
    }
}
export interface SuggestOptions {
    target: string;
    items: string[];
    next?: Next;
    prefix?: string;
    suffix: string;
    minSimilarity?: number;
    apply: (this: Session, suggestion: string, next: Next) => Awaitable<void | string>;
}
declare class SuggestionService {
    ctx: Context;
    config: SuggestionService.Config;
    constructor(ctx: Context, config: SuggestionService.Config);
    getCommandNames(session: Session): string[];
}
declare namespace SuggestionService {
    interface Config {
        minSimilarity?: number;
    }
    const Config: Schema<Config>;
}
export default SuggestionService;
