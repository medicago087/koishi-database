/// <reference types="koishi/lib" />
import { App, Database, Tables } from 'koishi';
import sqlite from 'better-sqlite3';
import { SQLBuilder, Caster } from '@koishijs/sql-utils';
export declare type TableType = keyof Tables;
export interface Config {
    path?: string;
}
export interface ISQLiteFieldInfo {
    name: string;
    type: string;
    notnull: number;
    dflt_value: string;
    pk: boolean;
}
declare class SQLiteDatabase extends Database {
    app: App;
    config: Config;
    db: sqlite.Database;
    sqlite: this;
    sql: SQLBuilder;
    caster: Caster;
    constructor(app: App, config: Config);
    private getColumnDefinitionSQL;
    private syncTable;
    start(): Promise<void>;
    _joinKeys(keys?: string[]): string;
    run(sql: string, params?: any): sqlite.RunResult;
    get(sql: string, params?: any): any;
    all(sql: string, params?: any): any[];
    _getTables(): string[];
    _getTableInfo(table: string): ISQLiteFieldInfo[];
    stop(): void;
}
export default SQLiteDatabase;
