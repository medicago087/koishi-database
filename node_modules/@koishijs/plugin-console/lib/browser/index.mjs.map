{
  "version": 3,
  "sources": ["../../src/browser/index.ts"],
  "sourcesContent": ["import { Schema } from 'koishi'\nimport { Console, Entry, SocketHandle } from '../shared'\nimport {} from '@koishijs/loader'\n\nexport * from '../shared'\n\nclass BrowserConsole extends Console {\n  start() {\n    // eslint-disable-next-line no-new\n    new SocketHandle(this.ctx, this.ctx.loader[Symbol.for('koishi.socket')])\n  }\n\n  resolveEntry(entry: string | string[] | Entry) {\n    if (typeof entry === 'string' || Array.isArray(entry)) return entry\n    return entry.prod\n  }\n}\n\nnamespace BrowserConsole {\n  export interface Config {}\n\n  export const Config: Schema<Config> = Schema.object({})\n}\n\nexport default BrowserConsole\n"],
  "mappings": ";;;;AAAA,SAAS,cAAc;AACvB,SAAS,SAAgB,oBAAoB;AAG7C,cAAc;AAEd,IAAM,iBAAN,cAA6B,QAAQ;AAAA,EACnC,QAAQ;AAEN,QAAI,aAAa,KAAK,KAAK,KAAK,IAAI,OAAO,OAAO,IAAI,eAAe,EAAE;AAAA,EACzE;AAAA,EAEA,aAAa,OAAkC;AAC7C,QAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,KAAK;AAAG,aAAO;AAC9D,WAAO,MAAM;AAAA,EACf;AACF;AAVM;AAAA,CAYN,CAAUA,oBAAV;AAGS,EAAMA,gBAAA,SAAyB,OAAO,OAAO,CAAC,CAAC;AAAA,GAH9C;AAMV,IAAO,kBAAQ;",
  "names": ["BrowserConsole"]
}
