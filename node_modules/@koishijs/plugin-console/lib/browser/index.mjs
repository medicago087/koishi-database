var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });

// koishi/external/console/packages/console/src/browser/index.ts
import { Schema } from "koishi";
import { Console, SocketHandle } from "../shared/index.mjs";
export * from "../shared/index.mjs";
var BrowserConsole = class extends Console {
  start() {
    new SocketHandle(this.ctx, this.ctx.loader[Symbol.for("koishi.socket")]);
  }
  resolveEntry(entry) {
    if (typeof entry === "string" || Array.isArray(entry))
      return entry;
    return entry.prod;
  }
};
__name(BrowserConsole, "BrowserConsole");
((BrowserConsole2) => {
  BrowserConsole2.Config = Schema.object({});
})(BrowserConsole || (BrowserConsole = {}));
var browser_default = BrowserConsole;
export {
  browser_default as default
};
//# sourceMappingURL=index.mjs.map
