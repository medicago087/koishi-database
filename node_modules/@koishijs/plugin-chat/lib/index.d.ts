import { Context, Schema } from 'koishi';
import { Message, RefreshConfig } from './receiver';
export * from './receiver';
declare module 'koishi' {
    interface Events {
        'chat/receive'(message: Message, session: Session): void;
    }
}
interface ChatPayload {
    content: string;
    platform: string;
    channelId: string;
    guildId: string;
    selfId: string;
}
declare module '@koishijs/plugin-console' {
    interface ClientConfig extends ClientExtension {
    }
    interface Events {
        chat(message: ChatPayload): Promise<void>;
    }
}
interface ClientExtension {
    whitelist?: string[];
    maxMessages?: number;
}
export declare const name = "chat";
export declare const using: readonly ["database"];
export interface Config extends ClientExtension {
    refresh?: RefreshConfig;
    logLevel?: number;
}
export declare const Config: Schema<Config>;
export declare function apply(ctx: Context, options?: Config): void;
