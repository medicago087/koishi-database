import { defineComponent as q, openBlock as o, createElementBlock as d, normalizeClass as F, createCommentVNode as S, createElementVNode as r, toDisplayString as v, Fragment as $, createVNode as C, unref as g, withCtx as m, ref as w, computed as x, resolveComponent as y, createBlock as k, renderList as D, createTextVNode as z, KeepAlive as T } from "../vue.js";
import { MessageContent as U, ChatImage as H, createStorage as K, receive as O, config as W, VirtualList as Y, ChatInput as j, send as G, icons as J } from "../client.js";
const P = ["src"], Q = { class: "username" }, R = { class: "abstract" }, X = {
  key: 1,
  class: "timestamp"
}, Z = ["src"], ee = { class: "header" }, te = { class: "username" }, ae = { class: "timestamp" }, ne = /* @__PURE__ */ q({
  __name: "message",
  props: {
    data: null,
    successive: { type: Boolean }
  },
  emits: ["locate"],
  setup(a) {
    function h(e) {
      return e.length < 50 ? e : e.slice(0, 48) + "\u2026\u2026";
    }
    function i(e) {
      return Number.isNaN(+e) ? "" : `${e.getHours()}:${e.getMinutes().toString().padStart(2, "0")}:${e.getSeconds().toString().padStart(2, "0")}`;
    }
    function l(e) {
      if (Number.isNaN(+e))
        return "";
      const p = new Date();
      let _ = i(e);
      return e.toLocaleDateString() === p.toLocaleDateString() ? _ : `${e.getFullYear()}-${e.getMonth() + 1}-${e.getDate()} ${_}`;
    }
    return (e, p) => (o(), d("div", {
      class: F(["chat-message", { successive: a.successive }])
    }, [
      a.data.quote ? (o(), d("div", {
        key: 0,
        class: "quote",
        onClick: p[0] || (p[0] = (_) => e.$emit("locate", a.data.quote.messageId))
      }, [
        a.data.quote.author.avatar ? (o(), d("img", {
          key: 0,
          class: "quote-avatar",
          src: a.data.quote.author.avatar
        }, null, 8, P)) : S("", !0),
        r("span", Q, v(a.data.quote.author.username), 1),
        r("span", R, v(h(a.data.quote.abstract)), 1)
      ])) : S("", !0),
      a.successive ? (o(), d("span", X, v(i(new Date(a.data.timestamp))), 1)) : (o(), d($, { key: 2 }, [
        a.data.avatar ? (o(), d("img", {
          key: 0,
          class: "avatar",
          src: a.data.avatar
        }, null, 8, Z)) : S("", !0),
        r("div", ee, [
          r("span", te, v(a.data.username), 1),
          r("span", ae, v(l(new Date(a.data.timestamp))), 1)
        ])
      ], 64)),
      C(g(U), {
        content: a.data.content
      }, {
        image: m(({ url: _ }) => [
          C(g(H), { src: _ }, null, 8, ["src"])
        ]),
        _: 1
      }, 8, ["content"])
    ], 2));
  }
});
const A = (a, h) => {
  const i = a.__vccOpts || a;
  for (const [l, e] of h)
    i[l] = e;
  return i;
}, se = /* @__PURE__ */ A(ne, [["__scopeId", "data-v-60c7e97e"]]), ce = { class: "k-tab-group-title" }, oe = { class: "card-header" }, le = /* @__PURE__ */ r("div", { class: "header-padding" }, null, -1), ue = /* @__PURE__ */ r("div", { class: "footer-padding" }, null, -1), re = { class: "card-footer" }, ie = /* @__PURE__ */ r("div", null, "\u8BF7\u5728\u5DE6\u4FA7\u9009\u62E9\u9891\u9053", -1), de = /* @__PURE__ */ q({
  __name: "chat",
  setup(a) {
    const h = w(), i = K("chat", 1, () => []), l = w("");
    O("chat", (c) => {
      i.push(c), i.splice(0, i.length - W.maxMessages);
    });
    const e = x(() => {
      var n, u, s;
      const c = {};
      for (const t of i) {
        const I = t.guildId || t.selfId + "$";
        (u = (c[n = t.platform + "/" + I] || (c[n] = {
          name: t.guildId ? t.guildName || "\u672A\u77E5\u7FA4\u7EC4" : `\u79C1\u804A (${t.selfName})`,
          channels: {}
        })).channels)[s = t.channelId] || (u[s] = {
          name: t.guildId ? t.channelName || "\u672A\u77E5\u9891\u9053" : t.username,
          selfId: t.selfId
        });
      }
      return c;
    }), p = x(() => {
      var t;
      if (!l.value)
        return;
      const [c, n, u] = l.value.split("/"), s = e.value[c + "/" + n];
      if (!!s)
        return `${s.name} / ${(t = s.channels[u]) == null ? void 0 : t.name}`;
    }), _ = x(() => {
      if (!l.value)
        return [];
      const [c, n, u] = l.value.split("/");
      return i.filter((s) => {
        if (!(s.platform !== c || s.channelId !== u) && !(n.endsWith("$") && s.selfId + "$" !== n))
          return !0;
      });
    });
    function M({ quote: c, userId: n, channelId: u }, s) {
      const t = _.value[s - 1];
      return !c && !!t && t.userId === n && t.channelId === u;
    }
    function V(c) {
      if (!l.value)
        return;
      const [n, u, s] = l.value.split("/"), { selfId: t } = e.value[n + "/" + u].channels[s];
      G("chat", { content: c, platform: n, channelId: s, guildId: u, selfId: t });
    }
    return (c, n) => {
      const u = y("k-tab-item"), s = y("el-scrollbar"), t = y("k-empty"), I = y("k-layout");
      return o(), k(I, { class: "page-chat" }, {
        left: m(() => [
          C(s, null, {
            default: m(() => [
              (o(!0), d($, null, D(g(e), ({ name: f, channels: E }, N) => (o(), d($, { key: N }, [
                r("div", ce, v(f), 1),
                (o(!0), d($, null, D(E, ({ name: L }, b) => (o(), k(u, {
                  key: b,
                  modelValue: l.value,
                  "onUpdate:modelValue": n[0] || (n[0] = (B) => l.value = B),
                  label: N + "/" + b
                }, {
                  default: m(() => [
                    z(v(L), 1)
                  ]),
                  _: 2
                }, 1032, ["modelValue", "label"]))), 128))
              ], 64))), 128))
            ]),
            _: 1
          })
        ]),
        default: m(() => [
          (o(), k(T, null, [
            l.value ? (o(), d($, { key: 0 }, [
              r("div", oe, v(g(p)), 1),
              C(g(Y), {
                data: g(_),
                pinned: "",
                "active-key": h.value,
                "onUpdate:active-key": n[1] || (n[1] = (f) => h.value = f),
                "key-name": "messageId"
              }, {
                header: m(() => [
                  le
                ]),
                default: m((f) => [
                  C(se, {
                    successive: M(f, f.index),
                    data: f
                  }, null, 8, ["successive", "data"])
                ]),
                footer: m(() => [
                  ue
                ]),
                _: 1
              }, 8, ["data", "active-key"]),
              r("div", re, [
                C(g(j), { onSend: V })
              ])
            ], 64)) : (o(), k(t, { key: 1 }, {
              default: m(() => [
                ie
              ]),
              _: 1
            }))
          ], 1024))
        ]),
        _: 1
      });
    };
  }
});
const me = {}, _e = {
  class: "k-icon",
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 640 512"
}, fe = /* @__PURE__ */ r("path", {
  fill: "currentColor",
  d: "M416 176C416 78.8 322.9 0 208 0S0 78.8 0 176c0 41.48 17.07 79.54 45.44 109.6c-15.17 32.34-38.65 58.07-38.95 58.38c-6.514 6.836-8.309 16.91-4.568 25.67C5.754 378.4 14.26 384 23.66 384c54.19 0 97.76-20.73 125.9-39.17C168.1 349.4 187.7 352 208 352C322.9 352 416 273.2 416 176zM208 320c-16.96 0-34.04-2.098-50.75-6.232L143.7 310.4L132 318.1c-20.43 13.38-51.58 28.99-89.85 32.97c9.377-12.11 22.3-30.63 32.24-51.82l9.242-19.71L68.72 263.7C44.7 238.2 32 207.9 32 176C32 96.6 110.1 32 208 32S384 96.6 384 176S305 320 208 320zM606.4 435.4C627.6 407.1 640 372.9 640 336C640 238.8 554 160 448 160c-.3145 0-.6191 .041-.9336 .043C447.5 165.3 448 170.6 448 176c0 5.43-.4668 10.76-.9414 16.09C447.4 192.1 447.7 192 448 192c88.22 0 160 64.6 160 144c0 28.69-9.424 56.45-27.25 80.26l-13.08 17.47l11.49 18.55c6.568 10.61 13.18 19.74 18.61 26.74c-18.26-1.91-36.45-6.625-54.3-14.09l-12.69-5.305l-12.58 5.557C495.9 475 472.3 480 448 480c-75.05 0-137.7-46.91-154.9-109.7c-10.1 3.336-20.5 6.132-31.2 8.271C282.7 455.1 357.1 512 448 512c29.82 0 57.94-6.414 83.12-17.54C555 504.5 583.7 512 616.3 512c9.398 0 17.91-5.57 21.73-14.32c3.74-8.758 1.945-18.84-4.568-25.67C633.3 471.8 619.6 456.8 606.4 435.4z"
}, null, -1), ve = [
  fe
];
function he(a, h) {
  return o(), d("svg", _e, ve);
}
const ge = /* @__PURE__ */ A(me, [["render", he]]);
J.register("activity:comments", ge);
const $e = (a) => {
  a.page({
    path: "/chat",
    name: "\u804A\u5929",
    icon: "activity:comments",
    authority: 3,
    component: de,
    order: 100
  });
};
export {
  $e as default
};
