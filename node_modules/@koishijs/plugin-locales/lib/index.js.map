{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { Context, Schema } from 'koishi'\nimport { promises as fsp } from 'fs'\nimport { resolve } from 'path'\n\nexport const name = 'locales'\n\nexport interface Config {\n  root?: string\n}\n\nexport const Config: Schema<Config> = Schema.object({\n  root: Schema.string().default('locales').description('存放用户语言包的根目录。'),\n})\n\nexport function apply(ctx: Context, config: Config) {\n  ctx.on('ready', async () => {\n    const folder = resolve(ctx.app.baseDir, config.root)\n    const created = await fsp.mkdir(folder, { recursive: true })\n    if (!created) {\n      const files = await fsp.readdir(folder)\n      for (const file of files) {\n        ctx.i18n.define('$' + file.split('.')[0], require(folder + '/' + file))\n      }\n    }\n  })\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgC;AAChC,gBAAgC;AAChC,kBAAwB;AAEjB,IAAM,OAAO;AAMb,IAAM,SAAyB,qBAAO,OAAO;AAAA,EAClD,MAAM,qBAAO,OAAO,EAAE,QAAQ,SAAS,EAAE,YAAY,cAAc;AACrE,CAAC;AAEM,SAAS,MAAM,KAAc,QAAgB;AAClD,MAAI,GAAG,SAAS,YAAY;AAC1B,UAAM,aAAS,qBAAQ,IAAI,IAAI,SAAS,OAAO,IAAI;AACnD,UAAM,UAAU,MAAM,UAAAA,SAAI,MAAM,QAAQ,EAAE,WAAW,KAAK,CAAC;AAC3D,QAAI,CAAC,SAAS;AACZ,YAAM,QAAQ,MAAM,UAAAA,SAAI,QAAQ,MAAM;AACtC,iBAAW,QAAQ,OAAO;AACxB,YAAI,KAAK,OAAO,MAAM,KAAK,MAAM,GAAG,EAAE,IAAI,QAAQ,SAAS,MAAM,KAAK;AAAA,MACxE;AAAA,IACF;AAAA,EACF,CAAC;AACH;AAXgB;",
  "names": ["fsp"]
}
