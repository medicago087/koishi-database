{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { Command, Context, Dict, Schema, segment, Session, Time } from 'koishi'\nimport { parsePlatform } from '@koishijs/helpers'\n\ndeclare module 'koishi' {\n  interface Channel {\n    forward: string[]\n  }\n}\n\nexport interface Rule {\n  source: string\n  target: string\n  selfId: string\n  guildId?: string\n}\n\nexport const Rule: Schema<Rule> = Schema.object({\n  source: Schema.string().required().description('来源频道。'),\n  target: Schema.string().required().description('目标频道。'),\n  selfId: Schema.string().required().description('负责推送的机器人账号。'),\n  guildId: Schema.string().description('目标频道的群组编号。'),\n}).description('转发规则。')\n\nexport const name = 'forward'\n\nexport interface Config {\n  rules: Rule[]\n  interval?: number\n}\n\nexport const Config: Schema<Config | Rule[], Config> = Schema.union([\n  Schema.object({\n    rules: Schema.array(Rule).description('转发规则列表。'),\n    interval: Schema.natural().role('ms').default(Time.hour).description('推送消息不再响应回复的时间。'),\n  }),\n  Schema.transform(Schema.array(Rule), (rules) => ({ rules, interval: Time.hour })),\n])\n\nexport function apply(ctx: Context, { rules, interval }: Config) {\n  ctx.i18n.define('zh', require('./locales/zh'))\n\n  const relayMap: Dict<Rule> = {}\n\n  async function sendRelay(session: Session, rule: Partial<Rule>) {\n    const { author, parsed } = session\n    if (!parsed.content) return\n\n    try {\n      // get selfId\n      const [platform, channelId] = parsePlatform(rule.target)\n      if (!rule.selfId) {\n        const channel = await ctx.database.getChannel(platform, channelId, ['assignee', 'guildId'])\n        if (!channel || !channel.assignee) return\n        rule.selfId = channel.assignee\n        rule.guildId = channel.guildId\n      }\n\n      const bot = ctx.bots[`${platform}:${rule.selfId}`]\n      const chain = segment.parse(parsed.content)\n\n      // replace all mentions (koishijs/koishi#506)\n      if (chain.some(item => item.type === 'at')) {\n        const dict = await session.bot.getGuildMemberMap(session.guildId)\n        chain.forEach((item, index) => {\n          if (item.type === 'at') {\n            const content = '@' + dict[item.attrs.id]\n            chain.splice(index, 1, segment('text', { content }))\n          }\n        })\n      }\n\n      const content = `${author.nickname || author.username}: ${chain.join('')}`\n      await bot.sendMessage(channelId, content, rule.guildId).then((ids) => {\n        for (const id of ids) {\n          relayMap[id] = {\n            source: rule.target,\n            target: session.cid,\n            selfId: session.selfId,\n            guildId: session.guildId,\n          }\n          ctx.setTimeout(() => delete relayMap[id], interval)\n        }\n      })\n    } catch (error) {\n      ctx.logger('forward').warn(error)\n    }\n  }\n\n  ctx.before('attach-channel', (session, fields) => {\n    fields.add('forward')\n  })\n\n  ctx.middleware(async (session: Session<never, 'forward'>, next) => {\n    const { quote = {}, subtype } = session\n    if (subtype !== 'group') return\n    const data = relayMap[quote.messageId]\n    if (data) return sendRelay(session, data)\n\n    const tasks: Promise<void>[] = []\n    if (ctx.database) {\n      for (const target of session.channel.forward) {\n        tasks.push(sendRelay(session, { target }))\n      }\n    } else {\n      for (const rule of rules) {\n        if (session.cid !== rule.source) continue\n        tasks.push(sendRelay(session, rule))\n      }\n    }\n    const [result] = await Promise.all([next(), ...tasks])\n    return result\n  })\n\n  ctx.model.extend('channel', {\n    forward: 'list',\n  })\n\n  ctx.using(['database'], (ctx) => {\n    const cmd = ctx\n      .command('forward [operation:string] <channel:channel>', { authority: 3 })\n      .alias('fwd')\n\n    const register = (def: string, callback: Command.Action<never, 'forward', [string]>) => cmd\n      .subcommand(def, { authority: 3, checkArgCount: true })\n      .channelFields(['forward'])\n      .action(callback)\n\n    register('.add <channel:channel>', async ({ session }, id) => {\n      const { forward } = session.channel\n      if (forward.includes(id)) {\n        return session.text('.unchanged', [id])\n      } else {\n        forward.push(id)\n        return session.text('.updated', [id])\n      }\n    })\n\n    register('.remove <channel:channel>', async ({ session }, id) => {\n      const { forward } = session.channel\n      const index = forward.indexOf(id)\n      if (index >= 0) {\n        forward.splice(index, 1)\n        return session.text('.updated', [id])\n      } else {\n        return session.text('.unchanged', [id])\n      }\n    }).alias('forward.rm')\n\n    register('.clear', async ({ session }) => {\n      session.channel.forward = []\n      return session.text('.updated')\n    })\n\n    register('.list', async ({ session }) => {\n      const { forward } = session.channel\n      if (!forward.length) return session.text('.empty')\n      return [session.text('.header'), ...forward].join('\\n')\n    }).alias('forward.ls')\n  })\n}\n"],
  "mappings": "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",
  "names": ["content", "ctx"]
}
