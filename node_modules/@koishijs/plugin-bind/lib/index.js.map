{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { Context, Dict, Random, Schema, Session, Time, User } from 'koishi'\n\nexport interface Config {\n  tokenPrefix?: string\n  generateToken?: () => string\n}\n\nexport const name = 'bind'\nexport const using = ['database'] as const\nexport const Config: Schema<Config> = Schema.object({\n  generateToken: Schema.function().hidden(),\n})\n\nexport function apply(ctx: Context, config: Config = {}) {\n  ctx.i18n.define('zh', require('./locales/zh'))\n  ctx.i18n.define('en', require('./locales/en'))\n\n  // 1: group (1st step)\n  // 0: private\n  // -1: group (2nd step)\n  type TokenData = [platform: string, id: string, pending: number]\n  const tokens: Dict<TokenData> = {}\n\n  const { tokenPrefix: prefix = 'koishi/' } = config\n  const { generateToken = () => `${prefix}` + Random.id(6, 10) } = config\n\n  function generate(session: Session, pending: number) {\n    const token = generateToken()\n    tokens[token] = [session.platform, session.userId, pending]\n    setTimeout(() => delete tokens[token], 5 * Time.minute)\n    return token\n  }\n\n  async function bind(user: User.Observed<never>, platform: string, userId: string) {\n    await ctx.database.remove('user', { [platform]: [userId] })\n    user[platform] = userId as never\n    await user.$update()\n  }\n\n  ctx.command('bind', { authority: 0 })\n    .action(({ session }) => {\n      const token = generate(session, +(session.subtype === 'group'))\n      return session.text('.generated-1', [token])\n    })\n\n  ctx.middleware(async (session, next) => {\n    const data = tokens[session.content]\n    if (!data) return next()\n    if (data[2] < 0) {\n      const sess = session.bot.session(session)\n      sess.platform = data[0]\n      sess.userId = data[1]\n      const user = await sess.observeUser([session.platform as never])\n      delete tokens[session.content]\n      await bind(user, session.platform, session.userId)\n      return session.text('commands.bind.messages.success')\n    } else {\n      const user = await session.observeUser(['authority', data[0] as never])\n      if (!user.authority) return session.text('internal.low-authority')\n      if (user[data[0]]) return session.text('commands.bind.messages.failed')\n      delete tokens[session.content]\n      if (data[2]) {\n        const token = generate(session, -1)\n        return session.text('commands.bind.messages.generated-2', [token])\n      } else {\n        await bind(user, data[0], data[1])\n        return session.text('commands.bind.messages.success')\n      }\n    }\n  }, true)\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAmE;AAO5D,IAAM,OAAO;AACb,IAAM,QAAQ,CAAC,UAAU;AACzB,IAAM,SAAyB,qBAAO,OAAO;AAAA,EAClD,eAAe,qBAAO,SAAS,EAAE,OAAO;AAC1C,CAAC;AAEM,SAAS,MAAM,KAAc,SAAiB,CAAC,GAAG;AACvD,MAAI,KAAK,OAAO,MAAM,YAAuB;AAC7C,MAAI,KAAK,OAAO,MAAM,YAAuB;AAM7C,QAAM,SAA0B,CAAC;AAEjC,QAAM,EAAE,aAAa,SAAS,UAAU,IAAI;AAC5C,QAAM,EAAE,gBAAgB,6BAAM,GAAG,WAAW,qBAAO,GAAG,GAAG,EAAE,GAAnC,iBAAqC,IAAI;AAEjE,WAAS,SAAS,SAAkB,SAAiB;AACnD,UAAM,QAAQ,cAAc;AAC5B,WAAO,SAAS,CAAC,QAAQ,UAAU,QAAQ,QAAQ,OAAO;AAC1D,eAAW,MAAM,OAAO,OAAO,QAAQ,IAAI,mBAAK,MAAM;AACtD,WAAO;AAAA,EACT;AALS;AAOT,iBAAe,KAAK,MAA4B,UAAkB,QAAgB;AAChF,UAAM,IAAI,SAAS,OAAO,QAAQ,EAAE,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;AAC1D,SAAK,YAAY;AACjB,UAAM,KAAK,QAAQ;AAAA,EACrB;AAJe;AAMf,MAAI,QAAQ,QAAQ,EAAE,WAAW,EAAE,CAAC,EACjC,OAAO,CAAC,EAAE,QAAQ,MAAM;AACvB,UAAM,QAAQ,SAAS,SAAS,EAAE,QAAQ,YAAY,QAAQ;AAC9D,WAAO,QAAQ,KAAK,gBAAgB,CAAC,KAAK,CAAC;AAAA,EAC7C,CAAC;AAEH,MAAI,WAAW,OAAO,SAAS,SAAS;AACtC,UAAM,OAAO,OAAO,QAAQ;AAC5B,QAAI,CAAC;AAAM,aAAO,KAAK;AACvB,QAAI,KAAK,KAAK,GAAG;AACf,YAAM,OAAO,QAAQ,IAAI,QAAQ,OAAO;AACxC,WAAK,WAAW,KAAK;AACrB,WAAK,SAAS,KAAK;AACnB,YAAM,OAAO,MAAM,KAAK,YAAY,CAAC,QAAQ,QAAiB,CAAC;AAC/D,aAAO,OAAO,QAAQ;AACtB,YAAM,KAAK,MAAM,QAAQ,UAAU,QAAQ,MAAM;AACjD,aAAO,QAAQ,KAAK,gCAAgC;AAAA,IACtD,OAAO;AACL,YAAM,OAAO,MAAM,QAAQ,YAAY,CAAC,aAAa,KAAK,EAAW,CAAC;AACtE,UAAI,CAAC,KAAK;AAAW,eAAO,QAAQ,KAAK,wBAAwB;AACjE,UAAI,KAAK,KAAK;AAAK,eAAO,QAAQ,KAAK,+BAA+B;AACtE,aAAO,OAAO,QAAQ;AACtB,UAAI,KAAK,IAAI;AACX,cAAM,QAAQ,SAAS,SAAS,EAAE;AAClC,eAAO,QAAQ,KAAK,sCAAsC,CAAC,KAAK,CAAC;AAAA,MACnE,OAAO;AACL,cAAM,KAAK,MAAM,KAAK,IAAI,KAAK,EAAE;AACjC,eAAO,QAAQ,KAAK,gCAAgC;AAAA,MACtD;AAAA,IACF;AAAA,EACF,GAAG,IAAI;AACT;AAzDgB;",
  "names": []
}
