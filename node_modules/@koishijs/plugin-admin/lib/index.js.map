{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { Channel, Command, Context, difference, enumKeys, Schema, User } from 'koishi'\nimport { adminChannel, adminUser, parsePlatform } from '@koishijs/helpers'\n\ntype Key = 'user' | 'channel'\n\nfunction adminFlag<U extends User.Field, G extends Channel.Field, A extends any[], O extends {}>(cmd: Command<U, G, A, O>, map: any, key: Key) {\n  return cmd\n    .option('list', '-l', { descPath: 'admin.options.list' })\n    .option('set', '-s', { authority: 4, descPath: 'admin.options.set' })\n    .option('unset', '-S', { authority: 4, descPath: 'admin.options.unset' })\n    .action(async ({ options, session }, ...args) => {\n      const target = session[key] as any\n\n      if (options.set || options.unset) {\n        const notFound = difference(args, enumKeys(map))\n        if (notFound.length) return session.text('admin.unknown-flag', [notFound.join(', ')])\n        for (const name of args) {\n          options.set ? target.flag |= map[name] : target.flag &= ~map[name]\n        }\n        return\n      }\n\n      if (options.list) {\n        return session.text('admin.all-flags', [enumKeys(map).join(', ')])\n      }\n\n      let flag = target.flag\n      const keys: string[] = []\n      while (flag) {\n        const value = 2 ** Math.floor(Math.log2(flag))\n        flag -= value\n        keys.unshift(map[value])\n      }\n      if (!keys.length) return session.text('admin.no-flags')\n      return session.text('admin.current-flags', [keys.join(', ')])\n    })\n}\n\nfunction adminLocale<U extends User.Field, G extends Channel.Field, A extends any[], O extends {}>(cmd: Command<U, G, A, O>, key: Key) {\n  return cmd\n    .option('remove', '-r', { descPath: 'admin.options.remove' })\n    .action(async ({ session, options }, ...args) => {\n      const target = session[key] as any\n      if (options.remove) {\n        target.locale = ''\n      } else if (args[0]) {\n        target.locale = args[0]\n      } else if (target.locale) {\n        return session.text('admin.current-locale', [target.locale])\n      } else {\n        return session.text('admin.no-locale')\n      }\n    })\n}\n\nexport interface Config {}\n\nexport const name = 'admin'\nexport const using = ['database'] as const\nexport const Config: Schema<Config> = Schema.object({})\n\nexport function apply(ctx: Context) {\n  ctx.i18n.define('zh', require('./locales/zh'))\n  ctx.i18n.define('en', require('./locales/en'))\n\n  ctx.command('user', { authority: 3 })\n  ctx.command('channel', { authority: 3 })\n\n  ctx.command('user/authorize <value:natural>', { authority: 4, checkUnknown: true })\n    .alias('auth')\n    .use(adminUser)\n    .action(async ({ session }, authority) => {\n      if (session.userId === session.user[session.platform]) return session.text('admin.user-expected')\n      session.user.authority = authority\n    })\n\n  ctx.command('user.locale <lang>', { authority: 1, checkUnknown: true })\n    .userFields(['locale'])\n    .use(adminLocale, 'user')\n    .use(adminUser)\n\n  ctx.command('user.flag [...flags]', { authority: 3, checkUnknown: true })\n    .userFields(['flag'])\n    .use(adminFlag, User.Flag, 'user')\n    .use(adminUser)\n\n  ctx.command('channel/assign [bot:user]', { authority: 4, checkUnknown: true })\n    .channelFields(['assignee'])\n    .option('remove', '-r', { descPath: 'admin.options.remove' })\n    .use(adminChannel)\n    .action(async ({ session, options }, value) => {\n      if (options.remove) {\n        session.channel.assignee = ''\n      } else if (!value) {\n        session.channel.assignee = session.selfId\n      } else {\n        const [platform, userId] = parsePlatform(value)\n        if (platform !== parsePlatform(options.channel)[0]) {\n          return session.text('admin.invalid-assignee-platform')\n        }\n        session.channel.assignee = userId\n      }\n    })\n\n  ctx.command('channel.locale <lang>', { authority: 3, checkUnknown: true })\n    .channelFields(['locale'])\n    .use(adminLocale, 'channel')\n    .use(adminChannel)\n\n  ctx.command('channel.flag [...flags]', { authority: 3, checkUnknown: true })\n    .channelFields(['flag'])\n    .use(adminFlag, Channel.Flag, 'channel')\n    .use(adminChannel)\n}\n"],
  "mappings": "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",
  "names": ["name"]
}
