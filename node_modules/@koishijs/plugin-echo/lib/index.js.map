{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { Context, Schema, segment } from 'koishi'\nimport { parsePlatform } from '@koishijs/helpers'\nimport zh from './locales/zh.yml'\n\nexport interface Config {}\n\nexport const name = 'echo'\nexport const Config: Schema<Config> = Schema.object({})\n\nexport function apply(ctx: Context) {\n  ctx.i18n.define('zh', zh)\n\n  ctx.command('echo <message:text>', { authority: 2 })\n    .option('escape', '-e', { authority: 3 })\n    .option('unescape', '-E', { authority: 3 })\n    .option('user', '-u [user:user]', { authority: 3 })\n    .option('channel', '-c [channel:channel]', { authority: 3 })\n    .option('guild', '-g [guild:string]', { authority: 3 })\n    .action(async ({ options, session }, message) => {\n      if (!message) return session.text('.expect-text')\n\n      if (options.unescape) {\n        message = segment.unescape(message)\n      }\n      if (options.escape) {\n        message = segment.escape(message)\n      }\n\n      const target = options.user || options.channel\n      if (target) {\n        const [platform, id] = parsePlatform(target)\n        const bot = ctx.bots.find(bot => bot.platform === platform)\n        if (!bot) {\n          return session.text('.platform-not-found')\n        } else if (options.user) {\n          await bot.sendPrivateMessage(id, message)\n        } else {\n          await bot.sendMessage(id, message, options.guild)\n        }\n        return\n      }\n\n      return message\n    })\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyC;AACzC,qBAA8B;;;;;;AAKvB,IAAM,OAAO;AACb,IAAM,SAAyB,qBAAO,OAAO,CAAC,CAAC;AAE/C,SAAS,MAAM,KAAc;AAClC,MAAI,KAAK,OAAO,MAAM,UAAE;AAExB,MAAI,QAAQ,uBAAuB,EAAE,WAAW,EAAE,CAAC,EAChD,OAAO,UAAU,MAAM,EAAE,WAAW,EAAE,CAAC,EACvC,OAAO,YAAY,MAAM,EAAE,WAAW,EAAE,CAAC,EACzC,OAAO,QAAQ,kBAAkB,EAAE,WAAW,EAAE,CAAC,EACjD,OAAO,WAAW,wBAAwB,EAAE,WAAW,EAAE,CAAC,EAC1D,OAAO,SAAS,qBAAqB,EAAE,WAAW,EAAE,CAAC,EACrD,OAAO,OAAO,EAAE,SAAS,QAAQ,GAAG,YAAY;AAC/C,QAAI,CAAC;AAAS,aAAO,QAAQ,KAAK,cAAc;AAEhD,QAAI,QAAQ,UAAU;AACpB,gBAAU,sBAAQ,SAAS,OAAO;AAAA,IACpC;AACA,QAAI,QAAQ,QAAQ;AAClB,gBAAU,sBAAQ,OAAO,OAAO;AAAA,IAClC;AAEA,UAAM,SAAS,QAAQ,QAAQ,QAAQ;AACvC,QAAI,QAAQ;AACV,YAAM,CAAC,UAAU,EAAE,QAAI,8BAAc,MAAM;AAC3C,YAAM,MAAM,IAAI,KAAK,KAAK,CAAAA,SAAOA,KAAI,aAAa,QAAQ;AAC1D,UAAI,CAAC,KAAK;AACR,eAAO,QAAQ,KAAK,qBAAqB;AAAA,MAC3C,WAAW,QAAQ,MAAM;AACvB,cAAM,IAAI,mBAAmB,IAAI,OAAO;AAAA,MAC1C,OAAO;AACL,cAAM,IAAI,YAAY,IAAI,SAAS,QAAQ,KAAK;AAAA,MAClD;AACA;AAAA,IACF;AAEA,WAAO;AAAA,EACT,CAAC;AACL;AAnCgB;",
  "names": ["bot"]
}
