{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { App, Argv, Awaitable, Channel, Command, difference, Extend, observe, User } from 'koishi'\nimport zhCN from './locales/zh-CN.yml'\nimport enUS from './locales/en-US.yml'\nimport jaJP from './locales/ja-JP.yml'\nimport frFR from './locales/fr-FR.yml'\nimport zhTW from './locales/zh-TW.yml'\n\nexport function parsePlatform(target: string): [platform: string, id: string] {\n  const index = target.indexOf(':')\n  const platform = target.slice(0, index)\n  const id = target.slice(index + 1)\n  return [platform, id] as any\n}\n\nconst refs = new WeakSet<App>()\n\nfunction loadI18n(app: App) {\n  if (refs.has(app)) return\n  refs.add(app)\n  app.i18n.define('zh', zhCN)\n  app.i18n.define('en', enUS)\n  app.i18n.define('ja', jaJP)\n  app.i18n.define('fr', frFR)\n  app.i18n.define('zh-TW', zhTW)\n}\n\nexport function handleError<U extends User.Field, G extends Channel.Field, A extends any[], O extends {}>(\n  cmd: Command<U, G, A, O>,\n  handler: (error: Error, argv: Argv<U, G, A, O>) => Awaitable<void | string>,\n) {\n  loadI18n(cmd.ctx.root)\n\n  return cmd.action(async (argv, ...args) => {\n    try {\n      return await argv.next()\n    } catch (error) {\n      if (handler) return handler(error, argv)\n      return argv.session.text('internal.error-encountered', error.message)\n    }\n  }, true)\n}\n\nexport function adminUser<U extends User.Field, G extends Channel.Field, A extends any[], O extends {}>(cmd: Command<U, G, A, O>) {\n  let notFound = false\n  loadI18n(cmd.ctx.root)\n\n  async function setTarget(argv: Argv<'authority', G, A, Extend<O, 'user', string>>) {\n    const { options, session } = argv\n    const { user, app } = session\n\n    // user not specified, use current user\n    if (!options.user) return\n\n    // spectified user is identical to current user\n    const [platform, userId] = parsePlatform(options.user)\n    if (session.user[platform] === userId) return\n\n    // get target user\n    const fields = session.collect('user', argv)\n    const data = await app.database.getUser(platform, userId, [...fields])\n\n    if (!data) {\n      notFound = true\n      const temp = app.model.tables.user.create()\n      temp[platform] = userId\n      session.user = observe(temp, async (diff) => {\n        await app.database.createUser(platform, userId, diff)\n      }, `user ${options.user}`)\n    } else if (user.authority <= data.authority) {\n      return session.text('internal.low-authority')\n    } else {\n      session.user = observe(data, async (diff) => {\n        await app.database.setUser(platform, userId, diff)\n      }, `user ${options.user}`)\n    }\n  }\n\n  return cmd\n    .option('user', '-u [user:user]', { authority: 3, descPath: 'admin.user-option' })\n    .userFields(['authority'])\n    .userFields(({ session, options }, fields) => {\n      const platform = options.user ? options.user.split(':')[0] : session.platform\n      fields.add(platform as never)\n    })\n    .action(async (argv, ...args) => {\n      const { session, next } = argv\n      const user = session.user\n      const output = await setTarget(argv)\n      if (output) return output\n      try {\n        const diffKeys = Object.keys(session.user.$diff)\n        const result = await next()\n        if (notFound && !session.user.authority) {\n          return session.text('admin.user-not-found')\n        } else if (typeof result === 'string') {\n          return result\n        } else if (!difference(Object.keys(session.user.$diff), diffKeys).length) {\n          return session.text('admin.user-unchanged')\n        } else if (session.user !== user && session.user.authority >= user.authority) {\n          return session.text('internal.low-authority')\n        }\n        await session.user.$update()\n        return session.text('admin.user-updated')\n      } finally {\n        session.user = user\n      }\n    }, true)\n}\n\nexport function adminChannel<U extends User.Field, G extends Channel.Field, A extends any[], O extends {}>(cmd: Command<U, G, A, O>) {\n  let notFound = false\n  loadI18n(cmd.ctx.root)\n\n  async function setTarget(argv: Argv<U, G, A, Extend<O, 'channel', string>>) {\n    const { options, session } = argv\n    const { app } = session\n\n    // channel is required for private messages\n    if (session.subtype === 'private' && !options.channel) {\n      return session.text('admin.not-in-group')\n    }\n\n    // channel not specified or identical, use current channel\n    const { channel = session.cid } = options\n    if (channel === session.cid && !session.channel['$detached']) return\n\n    // get target channel\n    const [platform, channelId] = parsePlatform(channel)\n    const fields = argv.session.collect('channel', argv)\n    const data = await app.database.getChannel(platform, channelId, [...fields])\n\n    if (!data) {\n      notFound = true\n      const temp = app.model.tables.channel.create()\n      temp.platform = platform\n      temp.id = channelId\n      session.channel = observe(temp, async (diff) => {\n        await app.database.createChannel(platform, channelId, diff)\n      }, `channel ${channel}`)\n    } else {\n      session.channel = observe(data, async (diff) => {\n        await app.database.setChannel(platform, channelId, diff)\n      }, `channel ${channel}`)\n    }\n  }\n\n  return cmd\n    .channelFields(['assignee'])\n    .option('channel', '-c [channel:channel]', { authority: 3, descPath: 'admin.channel-option' })\n    .action(async (argv, ...args) => {\n      const { session, next } = argv\n      const channel = session.channel\n      const output = await setTarget(argv)\n      if (output) return output\n      try {\n        const diffKeys = Object.keys(session.channel.$diff)\n        const result = await next()\n        if (notFound && !session.channel.assignee) {\n          return session.text('admin.channel-not-found')\n        } else if (typeof result === 'string') {\n          return result\n        } else if (!difference(Object.keys(session.channel.$diff), diffKeys).length) {\n          return session.text('admin.channel-unchanged')\n        }\n        await session.channel.$update()\n        return session.text('admin.channel-updated')\n      } finally {\n        session.channel = channel\n      }\n    }, true)\n}\n"],
  "mappings": "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",
  "names": []
}
