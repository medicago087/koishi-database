import { Argv, Awaitable, Channel, Command, Extend, User } from 'koishi';
export declare function parsePlatform(target: string): [platform: string, id: string];
export declare function handleError<U extends User.Field, G extends Channel.Field, A extends any[], O extends {}>(cmd: Command<U, G, A, O>, handler: (error: Error, argv: Argv<U, G, A, O>) => Awaitable<void | string>): Command<U, G, A, O>;
export declare function adminUser<U extends User.Field, G extends Channel.Field, A extends any[], O extends {}>(cmd: Command<U, G, A, O>): Command<"authority" | U, G, A, Extend<O, "user", string>>;
export declare function adminChannel<U extends User.Field, G extends Channel.Field, A extends any[], O extends {}>(cmd: Command<U, G, A, O>): Command<U, "assignee" | G, A, Extend<O, "channel", string>>;
