{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { Context } from 'koishi'\n\nexport interface Rule {\n  match: string | RegExp\n  reply: string | ((...capture: string[]) => string)\n}\n\nexport interface Config {\n  rules?: Rule[]\n}\n\nexport const name = 'respondent'\n\nexport function apply(ctx: Context, { rules = [] }: Config) {\n  ctx.middleware((session, next) => {\n    const message = session.content.trim()\n    for (const { match, reply } of rules) {\n      const capture = typeof match === 'string' ? message === match && [message] : message.match(match)\n      if (capture) return typeof reply === 'string' ? reply : reply(...capture)\n    }\n    return next()\n  })\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWO,IAAM,OAAO;AAEb,SAAS,MAAM,KAAc,EAAE,QAAQ,CAAC,EAAE,GAAW;AAC1D,MAAI,WAAW,CAAC,SAAS,SAAS;AAChC,UAAM,UAAU,QAAQ,QAAQ,KAAK;AACrC,eAAW,EAAE,OAAO,MAAM,KAAK,OAAO;AACpC,YAAM,UAAU,OAAO,UAAU,WAAW,YAAY,SAAS,CAAC,OAAO,IAAI,QAAQ,MAAM,KAAK;AAChG,UAAI;AAAS,eAAO,OAAO,UAAU,WAAW,QAAQ,MAAM,GAAG,OAAO;AAAA,IAC1E;AACA,WAAO,KAAK;AAAA,EACd,CAAC;AACH;AATgB;",
  "names": []
}
