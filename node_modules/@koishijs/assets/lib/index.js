"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const koishi_1 = require("koishi");
const crypto_1 = require("crypto");
const path_1 = require("path");
const file_type_1 = __importDefault(require("file-type"));
koishi_1.Context.service('assets');
class Assets extends koishi_1.Service {
    constructor(ctx, config) {
        super(ctx, 'assets');
        this.ctx = ctx;
        this.config = config;
        this.types = Assets.types;
    }
    async transform(content) {
        return await koishi_1.segment.transformAsync(content, Object.fromEntries(this.types.map((type) => {
            return [type, async (data) => {
                    if (this.config.whitelist.some(prefix => data.url.startsWith(prefix))) {
                        return (0, koishi_1.segment)(type, data);
                    }
                    else {
                        return (0, koishi_1.segment)(type, { url: await this.upload(data.url, data.file) });
                    }
                }];
        })));
    }
    async analyze(url, name = '') {
        const file = await this.ctx.http.file(url);
        const buffer = Buffer.from(file.data);
        const hash = (0, crypto_1.createHash)('sha1').update(buffer).digest('hex');
        if (name) {
            name = (0, path_1.basename)(name);
            if (!name.startsWith('.')) {
                name = `-${name}`;
            }
        }
        else {
            const fileType = await file_type_1.default.fromBuffer(buffer);
            if (fileType) {
                name = `.${fileType.ext}`;
            }
        }
        return { buffer, hash, name, filename: `${hash}${name}` };
    }
}
Assets.types = ['image', 'audio', 'video'];
(function (Assets) {
    Assets.Config = koishi_1.Schema.object({
        whitelist: koishi_1.Schema.array(koishi_1.Schema.string().required().role('link')).description('不处理的白名单 URL 列表。'),
    });
})(Assets || (Assets = {}));
exports.default = Assets;
