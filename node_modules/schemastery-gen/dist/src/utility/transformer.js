"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformDict = exports.transformArray = exports.transformSingle = exports.SetTransformer = void 0;
const metadata_1 = require("../metadata/metadata");
const def_1 = require("../def");
const lodash_1 = __importDefault(require("lodash"));
const kschema_1 = require("./kschema");
const decorators_1 = require("../decorators");
function SetTransformer(transformer) {
    return metadata_1.Metadata.set('Transformer', transformer);
}
exports.SetTransformer = SetTransformer;
function transformSingle(cl, val) {
    if (cl[def_1.RefSym]) {
        const ref = cl;
        return transformSingle((0, decorators_1.resolveSchemaType)(ref.factory()), val);
    }
    else if (cl[kschema_1.kSchema]) {
        const schema = cl;
        return new schema(val);
    }
    else {
        return val;
    }
}
exports.transformSingle = transformSingle;
function transformArray(cl, val) {
    if (!val) {
        return;
    }
    const result = val.map((v) => transformSingle(cl, v));
    return result;
}
exports.transformArray = transformArray;
function transformDict(cl, val, array) {
    if (!val) {
        return;
    }
    let result;
    if (array) {
        result = val.map((v) => lodash_1.default.mapValues(v, (_v) => transformSingle(cl, _v)));
    }
    else {
        result = lodash_1.default.mapValues(val, (_v) => transformSingle(cl, _v));
    }
    return result;
}
exports.transformDict = transformDict;
//# sourceMappingURL=transformer.js.map