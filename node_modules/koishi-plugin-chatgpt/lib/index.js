"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.apply = exports.Config = void 0;
const node_chatgpt_1 = require("node-chatgpt");
const koishi_1 = require("koishi");
exports.Config = koishi_1.Schema.object({
    token: koishi_1.Schema.string().description('ChatGPT 会话令牌。').required(),
    appellation: koishi_1.Schema.boolean().description('是否使用称呼触发对话。').default(true),
    prefix: koishi_1.Schema.string().description('使用特定前缀触发对话。').default('!'),
});
function apply(ctx, config) {
    ctx.i18n.define('zh', require('./locales/zh-CN'));
    const api = new node_chatgpt_1.ChatGPTAPI({ sessionToken: config.token, markdown: false });
    ctx.middleware(async (session, next) => {
        if (session.parsed?.appel) {
            return session.execute('chatgpt ' + session.parsed.content);
        }
        else if (config.prefix && session.content.startsWith(config.prefix)) {
            return session.execute('chatgpt ' + session.content.slice(config.prefix.length));
        }
        else {
            return next();
        }
    });
    ctx.command('chatgpt')
        .action(async ({ session }, input) => {
        try {
            // ensure the API is properly authenticated (optional)
            await api.ensureAuth();
        }
        catch (err) {
            return session.text('.invalid-token');
        }
        // send a message and wait for the response
        const response = await api.sendMessage(input);
        return response;
    });
}
exports.apply = apply;
