import { BetterLock as BetterLockUnadorned } from './better_lock';
import { BetterLockError, BetterLockExecutionTimeoutError, BetterLockInternalError, BetterLockInvalidArgumentError, BetterLockJobAbortedError, BetterLockQueueOverflowError, BetterLockWaitTimeoutError } from './errors';
import { ILockJobOptions as BetterLockJobOptions, IOptions as BetterLockOptions } from './options';
import { IErrorName as BetterLockErrorName, IExecutor as BetterLockExecutor, ILockKey as BetterLockKey } from './types';
export { BetterLockOptions, BetterLockJobOptions, BetterLockExecutor, BetterLockKey, BetterLockErrorName, BetterLockError, BetterLockExecutionTimeoutError, BetterLockInternalError, BetterLockInvalidArgumentError, BetterLockJobAbortedError, BetterLockQueueOverflowError, BetterLockWaitTimeoutError, };
export declare const BetterLock: typeof BetterLockUnadorned & {
    BetterLock: typeof BetterLockUnadorned;
    Error: typeof BetterLockError;
    InternalError: typeof BetterLockInternalError;
    InvalidArgumentError: typeof BetterLockInvalidArgumentError;
    WaitTimeoutError: typeof BetterLockWaitTimeoutError;
    ExecutionTimeoutError: typeof BetterLockExecutionTimeoutError;
    QueueOverflowError: typeof BetterLockQueueOverflowError;
    JobAbortedError: typeof BetterLockJobAbortedError;
};
export default BetterLock;
