var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// koishi/packages/koishi/src/index.ts
var src_exports = {};
__export(src_exports, {
  Patch: () => Patch,
  Router: () => import_satori.Router,
  WebSocketLayer: () => import_satori.WebSocketLayer,
  scope: () => scope
});
module.exports = __toCommonJS(src_exports);
var import_core = require("@koishijs/core");
var import_ns_require = __toESM(require("ns-require"));
var import_satori = require("@satorijs/satori");
__reExport(src_exports, require("@koishijs/core"), module.exports);
__reExport(src_exports, require("@koishijs/utils"), module.exports);
var Patch = class {
  constructor(ctx) {
    var _a, _b;
    (_b = (_a = ctx.root).baseDir) != null ? _b : _a.baseDir = process.cwd();
  }
};
__name(Patch, "Patch");
import_core.Context.service("$patch", Patch);
var scope = (0, import_ns_require.default)({
  namespace: "koishi",
  prefix: "plugin",
  official: "koishijs"
});
var plugin = import_core.Context.prototype.plugin;
import_core.Context.prototype.plugin = function(entry, config) {
  if (typeof entry === "string") {
    entry = scope.require(entry);
  }
  return plugin.call(this, entry, config);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Patch,
  Router,
  WebSocketLayer,
  scope
});
//# sourceMappingURL=index.cjs.map
