{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { Context } from '@koishijs/core'\nimport ns from 'ns-require'\n\nexport { Router, WebSocketLayer } from '@satorijs/satori'\n\nexport type { Watcher } from './worker'\nexport * from '@koishijs/core'\nexport * from '@koishijs/utils'\n\ndeclare module 'cordis' {\n  interface Context {\n    plugin(path: string, config?: any): ForkScope<this>\n  }\n}\n\nclass Patch {\n  constructor(ctx: Context) {\n    ctx.root.envData ??= {}\n    ctx.root.baseDir ??= process.cwd()\n  }\n}\n\nContext.service('$patch', Patch)\n\nexport const scope = ns({\n  namespace: 'koishi',\n  prefix: 'plugin',\n  official: 'koishijs',\n})\n\nconst plugin = Context.prototype.plugin\nContext.prototype.plugin = function (this: Context, entry: any, config?: any) {\n  if (typeof entry === 'string') {\n    entry = scope.require(entry)\n  }\n  return plugin.call(this, entry, config)\n}\n"],
  "mappings": ";;;;AAAA,SAAS,eAAe;AACxB,OAAO,QAAQ;AAEf,SAAS,QAAQ,sBAAsB;AAGvC,cAAc;AACd,cAAc;AAQd,IAAM,QAAN,MAAY;AAAA,EACV,YAAY,KAAc;AACxB,QAAI,KAAK,YAAY,CAAC;AACtB,QAAI,KAAK,YAAY,QAAQ,IAAI;AAAA,EACnC;AACF;AALM;AAON,QAAQ,QAAQ,UAAU,KAAK;AAExB,IAAM,QAAQ,GAAG;AAAA,EACtB,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,UAAU;AACZ,CAAC;AAED,IAAM,SAAS,QAAQ,UAAU;AACjC,QAAQ,UAAU,SAAS,SAAyB,OAAY,QAAc;AAC5E,MAAI,OAAO,UAAU,UAAU;AAC7B,YAAQ,MAAM,QAAQ,KAAK;AAAA,EAC7B;AACA,SAAO,OAAO,KAAK,MAAM,OAAO,MAAM;AACxC;",
  "names": []
}
