var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// packages/youdao/src/index.ts
var src_exports = {};
__export(src_exports, {
  default: () => src_default
});
module.exports = __toCommonJS(src_exports);
var import_crypto = require("crypto");
var import_koishi = require("koishi");
var import_translator = __toESM(require("@koishijs/translator"));
function encrypt(source) {
  return (0, import_crypto.createHash)("md5").update(source).digest("hex");
}
__name(encrypt, "encrypt");
var YoudaoTranslator = class extends import_translator.default {
  async translate(options) {
    const { appKey, secret } = this.config;
    const salt = new Date().getTime();
    const q = options.input;
    const from = options.source || "";
    const to = options.target || "zh-CHS";
    const sign = encrypt(appKey + q + salt + secret);
    const data = await this.ctx.http.get("http://openapi.youdao.com/api", {
      params: { q, appKey, salt, from, to, sign }
    });
    if (+data.errorCode) {
      throw new Error("errorCode: " + data.errorCode);
    }
    const output = data.translation;
    if (options.detail && data.basic) {
      if (data.basic.phonetic) {
        output.push(data.basic.phonetic);
      }
      output.push(...data.basic.explains);
    }
    [options.source, options.target] = data.l.split("2");
    return output.join("\n");
  }
};
__name(YoudaoTranslator, "YoudaoTranslator");
((YoudaoTranslator2) => {
  YoudaoTranslator2.Config = import_koishi.Schema.object({
    appKey: import_koishi.Schema.string().required().description("有道翻译的 App Key。"),
    secret: import_koishi.Schema.string().role("secret").required().description("有道翻译的 Secret。")
  });
})(YoudaoTranslator || (YoudaoTranslator = {}));
var src_default = YoudaoTranslator;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
//# sourceMappingURL=index.js.map
