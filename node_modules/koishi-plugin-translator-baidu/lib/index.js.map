{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { createHash } from 'crypto'\nimport { Schema } from 'koishi'\nimport Translator from '@koishijs/translator'\n\nclass BaiduTranslator extends Translator<BaiduTranslator.Config> {\n  private _signature(query: string, salt: string | number) {\n    // https://fanyi-api.baidu.com/doc/21\n    const str = this.config.appid + query + salt + this.config.secret\n    const md5 = createHash('md5')\n    md5.update(str)\n    return md5.digest('hex')\n  }\n\n  async translate(options?: Translator.Result): Promise<string> {\n    const from = options.source || 'auto'\n    const to = options.target || 'zh'\n    const q = options.input\n    const salt = new Date().getTime()\n    const sign = this._signature(q, salt.toString())\n\n    const resp = await this.ctx.http.post<TranslateResponse | ErrorResponse>(\n      'http://api.fanyi.baidu.com/api/trans/vip/translate',\n      { from, to, q, salt, appid: this.config.appid, sign },\n      {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      },\n    )\n\n    if ('error_code' in resp && +resp.error_code) {\n      throw new Error('errorCode: ' + resp.error_code)\n    }\n\n    if (!('trans_result' in resp)) {\n      throw new Error('invalid response')\n    }\n\n    return resp.trans_result[0].dst\n  }\n}\n\nnamespace BaiduTranslator {\n  export interface Config extends Translator.Config {\n    appid: string\n    secret: string\n  }\n\n  export const Config: Schema<Config> = Schema.object({\n    appid: Schema.string().required().description('百度翻译的 App ID。'),\n    secret: Schema.string().role('secret').required().description('百度翻译的 Secret。'),\n  })\n}\n\nexport default BaiduTranslator\n\ninterface TranslateResponse {\n  from: string\n  to: string\n  trans_result: TranslateResult[]\n}\n\ninterface ErrorResponse {\n  error_code: string\n  error_msg: string\n}\n\ninterface TranslateResult {\n  src: string\n  dst: string\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA2B;AAC3B,oBAAuB;AACvB,wBAAuB;AAEvB,IAAM,kBAAN,cAA8B,kBAAAA,QAAmC;AAAA,EACvD,WAAW,OAAe,MAAuB;AAEvD,UAAM,MAAM,KAAK,OAAO,QAAQ,QAAQ,OAAO,KAAK,OAAO;AAC3D,UAAM,UAAM,0BAAW,KAAK;AAC5B,QAAI,OAAO,GAAG;AACd,WAAO,IAAI,OAAO,KAAK;AAAA,EACzB;AAAA,EAEA,MAAM,UAAU,SAA8C;AAC5D,UAAM,OAAO,QAAQ,UAAU;AAC/B,UAAM,KAAK,QAAQ,UAAU;AAC7B,UAAM,IAAI,QAAQ;AAClB,UAAM,OAAO,IAAI,KAAK,EAAE,QAAQ;AAChC,UAAM,OAAO,KAAK,WAAW,GAAG,KAAK,SAAS,CAAC;AAE/C,UAAM,OAAO,MAAM,KAAK,IAAI,KAAK;AAAA,MAC/B;AAAA,MACA,EAAE,MAAM,IAAI,GAAG,MAAM,OAAO,KAAK,OAAO,OAAO,KAAK;AAAA,MACpD;AAAA,QACE,SAAS;AAAA,UACP,gBAAgB;AAAA,QAClB;AAAA,MACF;AAAA,IACF;AAEA,QAAI,gBAAgB,QAAQ,CAAC,KAAK,YAAY;AAC5C,YAAM,IAAI,MAAM,gBAAgB,KAAK,UAAU;AAAA,IACjD;AAEA,QAAI,EAAE,kBAAkB,OAAO;AAC7B,YAAM,IAAI,MAAM,kBAAkB;AAAA,IACpC;AAEA,WAAO,KAAK,aAAa,GAAG;AAAA,EAC9B;AACF;AApCM;AAAA,CAsCN,CAAUC,qBAAV;AAMS,EAAMA,iBAAA,SAAyB,qBAAO,OAAO;AAAA,IAClD,OAAO,qBAAO,OAAO,EAAE,SAAS,EAAE,YAAY,eAAe;AAAA,IAC7D,QAAQ,qBAAO,OAAO,EAAE,KAAK,QAAQ,EAAE,SAAS,EAAE,YAAY,eAAe;AAAA,EAC/E,CAAC;AAAA,GATO;AAYV,IAAO,cAAQ;",
  "names": ["Translator", "BaiduTranslator"]
}
