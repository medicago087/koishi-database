"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LockKey = exports.CacheKey = exports.CachePrefix = exports.CacheTTL = void 0;
const metadata_1 = require("./metadata");
const CacheTTL = (ttl) => metadata_1.Metadata.set('AragamiCacheTTL', ttl);
exports.CacheTTL = CacheTTL;
const CachePrefix = (prefix) => metadata_1.Metadata.set('AragamiCachePrefix', prefix);
exports.CachePrefix = CachePrefix;
const DrainKey = (decoratorFactory, defaultValue) => (fun = defaultValue) => (obj, key, des) => {
    let cb;
    if (des) {
        // method decorator
        // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-ignore
        cb = async (o) => fun(await o[key](), key);
    }
    else {
        // property decorator
        cb = (o) => fun(o[key], key);
    }
    return decoratorFactory(cb)(obj.constructor);
};
exports.CacheKey = DrainKey((cb) => metadata_1.Metadata.set('AragamiCacheKey', cb), (o) => o.toString());
exports.LockKey = DrainKey((cb) => metadata_1.Metadata.append('AragamiLockKeys', cb), (o, key) => `${key}_${o}`);
//# sourceMappingURL=decorators.js.map