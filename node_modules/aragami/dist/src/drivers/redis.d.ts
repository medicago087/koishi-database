/// <reference types="node" />
import { BaseDriver } from '../base-driver';
import { RedisDriverOptions } from '../def';
export declare class RedisDriver extends BaseDriver {
    private options;
    private readonly redis;
    private readonly redlock;
    constructor(options: RedisDriverOptions);
    get(baseKey: string, key: string): Promise<Buffer>;
    set(baseKey: string, key: string, value: Buffer, ttl: number): Promise<void>;
    del(baseKey: string, key: string): Promise<boolean>;
    private originalKeys;
    keys(baseKey: string, prefix?: string): Promise<string[]>;
    clear(baseKey: string, prefix?: string): Promise<void>;
    lock<R>(keys: string[], cb: () => Promise<R>): Promise<R>;
    destroy(): Promise<void>;
}
