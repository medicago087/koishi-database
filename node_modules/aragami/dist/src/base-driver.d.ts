/// <reference types="node" />
export declare class BaseDriver {
    protected usingKey(baseKey: string, key: string): string;
    get(baseKey: string, key: string): Promise<Buffer>;
    has(baseKey: string, key: string): Promise<boolean>;
    set(baseKey: string, key: string, value: Buffer, ttl: number): Promise<void>;
    del(baseKey: string, key: string): Promise<boolean>;
    keys(baseKey: string, prefix?: string): Promise<string[]>;
    values(baseKey: string, prefix?: string): Promise<Buffer[]>;
    entries(baseKey: string, prefix?: string): Promise<[string, Buffer][]>;
    clear(baseKey: string, prefix?: string): Promise<void>;
    lock<R>(keys: string[], cb: () => Promise<R>): Promise<R>;
    destroy(): Promise<void>;
}
