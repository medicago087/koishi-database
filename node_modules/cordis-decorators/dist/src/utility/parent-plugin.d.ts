import { Context } from 'cordis';
import { PluginRegistrar } from '../plugin-def';
import { TypeFromClass } from '../def';
export declare function ParentPlugin<PC extends PluginRegistrar.PluginClass<Context>>(child: PC): {
    new (ctx: PluginRegistrar.ContextFromPlugin<PC>, config: PluginRegistrar.ClassPluginConfig<PC>): {
        onFork(instance: TypeFromClass<PC>): void | Promise<void>;
        onForkDisconnect(instance: TypeFromClass<PC>): void | Promise<void>;
        ctx: PluginRegistrar.ContextFromPlugin<PC>;
        config: PluginRegistrar.ExactClassPluginConfig<PC>;
    };
};
export declare function ParentPluginSet<PC extends PluginRegistrar.PluginClass<Context>>(child: PC): {
    new (ctx: PluginRegistrar.ContextFromPlugin<PC>, config: PluginRegistrar.ClassPluginConfig<PC>): {
        instances: Set<TypeFromClass<PC>>;
        onFork(instance: TypeFromClass<PC>): void;
        onForkDisconnect(instance: TypeFromClass<PC>): void;
        ctx: PluginRegistrar.ContextFromPlugin<PC>;
        config: PluginRegistrar.ExactClassPluginConfig<PC>;
    };
};
export declare function ParentPluginMap<PC extends PluginRegistrar.PluginClass<Context>, R>(child: PC, classifyFunction: (instance: TypeFromClass<PC>) => R): {
    new (ctx: PluginRegistrar.ContextFromPlugin<PC>, config: PluginRegistrar.ClassPluginConfig<PC>): {
        instances: Map<R, TypeFromClass<PC>>;
        onFork(instance: TypeFromClass<PC>): void;
        onForkDisconnect(instance: TypeFromClass<PC>): void;
        ctx: PluginRegistrar.ContextFromPlugin<PC>;
        config: PluginRegistrar.ExactClassPluginConfig<PC>;
    };
};
