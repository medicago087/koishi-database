declare type AnyFunction = (...args: any[]) => any;
export declare function extractObjectMethod<T, K extends keyof T>(o: T, key: K): T[K] extends AnyFunction ? T[K] : AnyFunction;
export declare function uniq<T>(arr: T[]): T[];
export declare function mapValues<T extends Record<string, any>, R>(obj: T, fn: (v: T[keyof T], k: keyof T) => R): Record<keyof T, R>;
export {};
