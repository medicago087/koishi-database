"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ParentPluginMap = exports.ParentPluginSet = exports.ParentPlugin = void 0;
const registrar_1 = require("../registrar");
const decorators_1 = require("../decorators");
function ParentPlugin(child) {
    const plugin = class ParentPluginBase extends registrar_1.BasePlugin {
        onFork(instance) { }
        onForkDisconnect(instance) { }
    };
    const schema = child['Config'];
    if (schema) {
        (0, decorators_1.PluginSchema)(schema)(plugin);
    }
    (0, decorators_1.Fork)(child)(plugin);
    return plugin;
}
exports.ParentPlugin = ParentPlugin;
function ParentPluginSet(child) {
    return class ParentPluginSet extends ParentPlugin(child) {
        constructor() {
            super(...arguments);
            this.instances = new Set();
        }
        onFork(instance) {
            this.instances.add(instance);
        }
        onForkDisconnect(instance) {
            this.instances.delete(instance);
        }
    };
}
exports.ParentPluginSet = ParentPluginSet;
function ParentPluginMap(child, classifyFunction) {
    return class ParentPluginMapBase extends ParentPlugin(child) {
        constructor() {
            super(...arguments);
            this.instances = new Map();
        }
        onFork(instance) {
            this.instances.set(classifyFunction(instance), instance);
        }
        onForkDisconnect(instance) {
            this.instances.delete(classifyFunction(instance));
        }
    };
}
exports.ParentPluginMap = ParentPluginMap;
//# sourceMappingURL=parent-plugin.js.map