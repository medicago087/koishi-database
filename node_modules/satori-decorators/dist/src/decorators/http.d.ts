/// <reference types="koa" />
export declare const Get: (path: string) => import("cordis-decorators").TypedMethodDecorator<(ctx: import("../registrar").KoaContext, Next: import("koa").Next) => Promise<any>>;
export declare const Post: (path: string) => import("cordis-decorators").TypedMethodDecorator<(ctx: import("../registrar").KoaContext, Next: import("koa").Next) => Promise<any>>;
export declare const Put: (path: string) => import("cordis-decorators").TypedMethodDecorator<(ctx: import("../registrar").KoaContext, Next: import("koa").Next) => Promise<any>>;
export declare const Delete: (path: string) => import("cordis-decorators").TypedMethodDecorator<(ctx: import("../registrar").KoaContext, Next: import("koa").Next) => Promise<any>>;
export declare const Patch: (path: string) => import("cordis-decorators").TypedMethodDecorator<(ctx: import("../registrar").KoaContext, Next: import("koa").Next) => Promise<any>>;
export declare const Options: (path: string) => import("cordis-decorators").TypedMethodDecorator<(ctx: import("../registrar").KoaContext, Next: import("koa").Next) => Promise<any>>;
export declare const Head: (path: string) => import("cordis-decorators").TypedMethodDecorator<(ctx: import("../registrar").KoaContext, Next: import("koa").Next) => Promise<any>>;
export declare const All: (path: string) => import("cordis-decorators").TypedMethodDecorator<(ctx: import("../registrar").KoaContext, Next: import("koa").Next) => Promise<any>>;
